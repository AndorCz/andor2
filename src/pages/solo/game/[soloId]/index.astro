---
	import LayoutSolo from '@layouts/layoutSolo.astro'
  import Concept from '@components/solo/Concept.svelte'
  import SoloGame from '@components/solo/SoloGame.svelte'
  import ConceptSettings from '@components/solo/ConceptSettings.svelte'
  import SoloGameSettings from '@components/solo/SoloGameSettings.svelte'

  const { soloId } = Astro.params
  const { supabase, user } = Astro.locals
  const showSettings = Astro.url.searchParams.get('settings')

  if (!user) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: Uživatel nepřihlášen')}`) }
  if (!soloId) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: Chybí id hry')}`) }

  /*
  const { data: game, error: soloError } = await supabase.from('solo_games').select().eq('id', soloId).single()
  if (soloError) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + soloError.message)}`) }

  const { data: concept, error: conceptError } = await supabase.from('solo_concepts').select().eq('id', game.concept_id).single()
  if (conceptError) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + conceptError.message)}`) }

  const { data: character, error: characterError } = await supabase.from('characters').select().match({ solo_game: game.id, player: user.id }).single()
  if (characterError) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + characterError.message)}`) }
  */

  const { data: soloData, error: soloError } = await supabase.rpc('get_solo_game', { solo_id: soloId }).single()
  if (soloError) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + soloError.error)}`) }
  const { game, concept, character } = soloData
---

<LayoutSolo title={concept?.name} headerStorage={concept?.custom_header ? `solo-${concept.id}.jpg?hash=${concept.custom_header}` : null}>
  {(game && concept ? (
    user?.id && game.player === user.id ? (
      showSettings ? (
        <SoloGameSettings {game} {user} client:only='svelte' />
      ) : (
        <SoloGame {game} {character} {concept} {user} client:only='svelte' />
      )
    ) : (
      <p>Nepřihlášený uživatel, nebo nemáš přístup k této hře</p>
    )
  ) : (
    <p>Hra nenalezena</p>
  ))}
</Layout>
