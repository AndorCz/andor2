---
	import Layout from '@layouts/layout.astro'
  import md5 from 'crypto-js/md5'

  const { supabase, user } = Astro.locals

  if (Astro.request.method === 'POST') {

    const data = await Astro.request.formData()
    const userName = data.get('userName')
    const oldUserName = data.get('oldUserName')
    const oldPassword = data.get('oldPassword')
    if (oldPassword && oldUserName) {
      const hashedPassword = md5(oldPassword).toString()
      const { data: userInfoMigrate, error: userError } = await supabase.from('old_users').select('old_id, old_created_at').eq('old_login', oldUserName.toLowerCase()).eq('old_psw', hashedPassword).maybeSingle()
      if (userError) { return Astro.redirect('/?toastType=error&toastText=' + encodeURIComponent('Chyba čtení starých uživatelů: ' + userError.message)) }
      if (!userInfoMigrate) { return Astro.redirect('/?toastType=error&toastText=' + encodeURIComponent('Uživatel nenalazen')) }

      // Check if user is already linked to some user
      const oldId = userInfoMigrate.old_id
      const { data: idCheck, error: idError } = await supabase.from('profiles').select('old_id').eq('old_id', parseInt(oldId, 10)).maybeSingle()
      if (idError) { return Astro.redirect('/?toastType=error&toastText=' + encodeURIComponent('Chyba čtení uživatelů: ' + idError.message)) }
      if (idCheck) { return Astro.redirect('/?toastType=error&toastText=' + encodeURIComponent(`Id původního uživatele ${oldLogin} je již spojeno s jiným účtem. Pokud ho máš na původním Andoru, napiš na eskel.work@gmail.com a vyřešíme to.`)) }

      // Link user with old login
      const { error } = await supabase.from('profiles').insert({ id: user.id, name: oldUserName, old_id: oldId, created_at: userInfoMigrate.old_created_at, created_at: userInfoMigrate.old_created_at })

      if (error) {
        console.error(error)
        return Astro.redirect('/?toastType=error&toastText=' + encodeURIComponent('Toto jméno je již zabrané. Pokud ho máš na původním Andoru, napiš na eskel.work@gmail.com a vyřešíme to.'))
      } else {
        return Astro.redirect('/?toastType=success&toastText=' + encodeURIComponent('Uživatelský profil byl dokončen'))
      }

    } else {
      if (userName) {
      // Check availability
      const { data: loginCheck, error: loginError } = await supabase.from('old_users').select('old_login').eq('old_login', userName).maybeSingle()
      if (loginCheck) {
        return Astro.redirect('/?toastType=error&toastText=' + encodeURIComponent('Toto jméno patřilo někomu z původního Andoru a je rezervováno.'))
      }

      const { error } = await supabase.from('profiles').insert({ id: user.id, name: userName })
      if (error) {
        console.error(error)
        return Astro.redirect('/?toastType=error&toastText=' + encodeURIComponent('Toto jméno je již zabrané. Pokud ho máš na původním Andoru, napiš na eskel.work@gmail.com a vyřešíme to.'))
      } else {
        return Astro.redirect('/?toastType=success&toastText=' + encodeURIComponent('Uživatelský profil byl dokončen'))
      }
    } else {
      return Astro.redirect('/?toastType=error&toastText=' + encodeURIComponent('Přezdívka nesmí být prázdná'))
    }
    }
  }
---

<Layout title='Přezdívka'>
  <h1>Dokončení registrace</h1>
  <p>Pokud jsi z původního andoru a chceš si něco přenést, učiň tak v Nastavení profilu.</p>

  {user.id && !user.name ? (
    <form method='POST' autocomplete='off'>
        <h3>Nový uživatel</h3>
      <div class='flex'>
        <div class='labels'>
          <label for='userName'>Přezdívka</label>
        </div>
        <div class='inputs'>
          <input type='text' id='userName' name='userName' minlength='1' maxlength='30' />
        </div>
      </div>
      <center>
        <button type='submit' class='large'>Dokončit</button>
      </center>
    </form>
      <form method='POST' autocomplete='off'>
        <h3>Uživatel Andor.cz</h3>
      <div class='flex'>
        <div class='labels'>
          <label for='userName'>Původní přezdívka</label>
          <label for='password'>Původní heslo</label>
        </div>
        <div class='inputs'>
          <input type='text' id='oldUserName' name='oldUserName' minlength='1' maxlength='30' />
          <input type='password' id='oldPassword' name='oldPassword' />
        </div>
      </div>
      <center>
        <button type='submit' class='large'>Dokončit</button>
      </center>
    </form>
  ) : (
    <>
      {user.id && user.name ? (
        <p>Tato stránka slouží k doplnění přezdívky pro dokončení registrace, ale tvoje už je zdá se kompletní. Tvoje přezdívka je "{user.name}".<br> Pokud je to chyba, napiš mi prosím na <a href='mailto:eskel.work@gmail.com'>eskel.work@gmail.com</a>, že je to rozbité. :)</p>
      ) : (
        <p>Tato stránka slouží k dokončení registrace a potřebuje tvoje uživatelské id. To ale nebylo nalezeno.<br> Zkus prosím registrační proces znovu, nebo mi prosím napiš na <a href='mailto:eskel.work@gmail.com'>eskel.work@gmail.com</a>, že je to rozbité. :)</p>
      )}
    </>
  )}
</Layout>

<style>
  form {
    width: 50%;
    margin: auto;
  }
    form div {
      padding-top: 10px;
      padding-bottom: 10px;
    }
    .labels {
      width: 20%;
      padding-right: 10px;
    }
    .flex {
      gap: 20px;
    }
    .inputs {
      flex: 1;
    }
      input {
        width: 100%;
      }
  center {
    margin-top: 20px;
  }
	@media (max-width: 860px) {
    form {
      width: 100%;
    }
  }
</style>
