---
	import Layout from '@layouts/layout.astro'
  import CharacterForm from '@components/games/CharacterForm.svelte'
  import { uploadPortrait, getHash } from '@lib/database'
  import { base64ToBlob } from '@lib/utils'

  const { supabase, user } = Astro.locals
  const game = Astro.url.searchParams.get('game') || ''
  const id = Astro.url.searchParams.get('id') || ''

  let character:any = {}
  let isGameOwner = false

  if (game) {
    const { data: gameData, error: gameError } = await supabase.from('games').select('*').eq('id', game).single()
    if (gameError) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + gameError.message)}`) }
    isGameOwner = gameData.owner === user.id
  }

  if (id) { // edit
    const { data: charData, error: charError } = await supabase.from('characters').select('*').eq('id', id).single()
    if (charError) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + charError.message)}`) }
    character = charData
  }

  if (Astro.request.method === 'POST') {
    try {
      const data = await Astro.request.formData()
      character.name = data.get('charName') || 'Beze jména'
      character.appearance = data.get('charLooks') || ''
      character.bio = data.get('charBio') || ''
      character.storyteller = data.get('storyteller') || false
      character.player = user.id
      if (character.storyteller) { character.accepted = true }

      if (game) {
        character.game = game
        const { error: timestampError } = await supabase.from('games').update({ characters_changed_at: new Date() }).eq('id', game)
        if (timestampError) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + timestampError.message)}`) }
      }

      const { data: characterData, error: error } = await supabase.from('characters').upsert(character).select().single()
      if (error) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + error.message)}`) }
      character.id = characterData.id // add id for a new character

      // create a File from base64, upload it
      const newPortrait = data.get('newPortrait')
      if (newPortrait) {
        const blob = base64ToBlob(newPortrait) // convert base64 to a blob
        const error = await uploadPortrait(character.id, 'characters', blob)
        if (error) { throw new Error(error)}
      }

      const confirmationText = id ? 'Postava byla upravena' : 'Postava byla vytvořena'
      if (game) {
        return Astro.redirect('/game/' + game + '/?toastType=success&toastText=' + encodeURIComponent(confirmationText))
      } else {
        return Astro.redirect('/?toastType=success&toastText=' + encodeURIComponent(confirmationText))
      }
    } catch (error) {
      return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + error.message)}`)
    }
  }
---

<Layout title={id ? 'Upravit postavu' : 'Vytvořit postavu'}>
  <a href='javascript:history.back()'>zpět</a>

  <h1>{id ? 'Upravit postavu' : 'Vytvořit postavu'}</h1>
  <CharacterForm {character} {isGameOwner} userId={user.id} client:only />
</Layout>
