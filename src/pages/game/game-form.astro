---
  import { handleError } from '@lib/database'
  import { createThread, getStoryteller } from '@lib/openai'
  import { updateCache } from '@lib/cache'
	import Layout from '@layouts/layout.astro'
  import GameForm from '@components/games/GameForm.svelte'

  const { supabase, user } = Astro.locals

  if (Astro.request.method === 'POST') {
    const formData = await Astro.request.formData()
    const gameName = formData.get('gameName')
    const gameSystem = formData.get('gameSystem')
    const gameCategory = formData.get('gameCategory')
    const gameAnnotation = formData.get('gameAnnotation')

    const openAiThread = await createThread()
    const openAiStoryteller = await getStoryteller(gameSystem)
    const { data, error } = await supabase.from('games').insert({ name: gameName, owner: user.id, category: gameCategory, system: gameSystem, annotation: gameAnnotation, openai_thread: openAiThread, openai_storyteller: openAiStoryteller }).select().single()
    updateCache('games', data)

    // add bookmark
    const { error: bookmarkError } = await supabase.from('bookmarks').upsert({ user_id: user.id, game_id: data.id }, { onConflict: 'user_id, game_id', ignoreDuplicates: true })
    if (bookmarkError) { return handleError(bookmarkError) }

    if (error) { handleError(error) }
    else {
      return Astro.redirect(`/game/${data.id}?toastType=success&toastText=${encodeURIComponent('Hra byla přidána')}`)
    }
  }
---

<Layout title='Vytvořit hru'>
  <a href='javascript:history.back()'>zpět</a>

  <h1>Vytvořit hru</h1>
  <GameForm {user} client:only />
</Layout>
