---
  import { getOpenAI, createThread, getStoryteller } from '@lib/openai'
	import Layout from '@layouts/layout.astro'
  import GameForm from '@components/games/GameForm.svelte'

  const { supabase, user } = Astro.locals

  if (Astro.request.method === 'POST') {
    const formData = await Astro.request.formData()
    const name = formData.get('gameName')
    const system = formData.get('gameSystem')
    const category = formData.get('gameCategory')
    const annotation = formData.get('gameAnnotation')

    // const openai = getOpenAI(Astro.locals.runtime.env)
    // const openAiThread = await createThread(openai)
    // const openAiStoryteller = await getStoryteller(system)
    // openai_thread: openAiThread, openai_storyteller: openAiStoryteller
    if (!name) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: Prosím vyplň jméno hry.')}`) }
    const { data, error } = await supabase.from('games').insert({ owner: user.id, name, category, system, annotation }).select().single()
    if (error) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + error.message)}`) }

    // add bookmark
    const { error: bookmarkError } = await supabase.from('bookmarks').upsert({ user_id: user.id, game_id: data.id, game_main_thread: data.game_thread, game_discussion_thread: data.discussion_thread }, { onConflict: 'user_id, game_id', ignoreDuplicates: true })
    if (bookmarkError) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + bookmarkError.message)}`) }

    const { error: readErrorMain } = await supabase.from('read_threads').upsert({ user_id: user.id, thread_id: data.game_thread }, { onConflict: 'user_id, thread_id', ignoreDuplicates: true })
    if (readErrorMain) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + readErrorMain.message)}`) }

    const { error: readErrorDisc } = await supabase.from('read_threads').upsert({ user_id: user.id, thread_id: data.discussion_thread }, { onConflict: 'user_id, thread_id', ignoreDuplicates: true })
    if (readErrorDisc) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + readErrorDisc.message)}`) }

    const { error: unreadErrorMain } = await supabase.from('unread_threads').upsert({ user_id: user.id, thread_id: data.game_thread, unread_count: 0 }, { onConflict: 'user_id, thread_id', ignoreDuplicates: true })
    if (unreadErrorMain) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + unreadErrorMain.message)}`) }

    const { error: unreadErrorDisc } = await supabase.from('unread_threads').upsert({ user_id: user.id, thread_id: data.discussion_thread, unread_count: 0 }, { onConflict: 'user_id, thread_id', ignoreDuplicates: true })
    if (unreadErrorDisc) { return Astro.redirect(`/?toastType=error&toastText=${encodeURIComponent('Chyba: ' + unreadErrorDisc.message)}`) }

    return Astro.redirect(`/game/${data.id}?toastType=success&toastText=${encodeURIComponent('Hra byla přidána')}`)
  }
---

<Layout title='Vytvořit hru'>
  <a href='javascript:history.back()'>zpět</a>
  <h1>Vytvořit hru</h1>
  <GameForm {user} client:only='svelte' />
</Layout>
